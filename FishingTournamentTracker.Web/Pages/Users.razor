@page "/users"
@inject Services.IUserService userService
@inject NavigationManager navigationManager

<PageTitle>View Users</PageTitle>

<div class="row mb-3 justify-content-end">
    <div class="col-auto">
        <a href="/user/automated"><button class="btn btn-warning">Automated Upload</button></a>
    </div>
    <div class="col-auto">
        <a href="/adduser"><button class="btn btn-success">Add User</button></a>
    </div>
    <div class="col-auto">
        <input @bind="SearchValue" type="text" class="form-control" placeholder="Search User By First Name" />
    </div>
    <div class="col-auto">
        <button class="btn btn-primary btn" @onclick="async () => await Search()">Search</button>
    </div>
</div>
<hr />

@if (SelectedUsers is not null && SelectedUsers.Any())
{
    <table class="table table-hover table-striped" role="button">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Grade</th>
                <th scope="col">Birthday</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in SelectedUsers)
            {
                <tr @onclick="() => GoToUserPage(user.Id!)">
                    <td>@user.FirstName @user.LastName</td>
                    <td>@user.Grade</td>
                    <td>@user.Birthday!.Value.ToString("d")</td>
                    <td><button id="@user.Id" data-bs-target="#deleteModal" class="btn btn-danger" data-bs-toggle="modal" @onclick:stopPropagation @onclick="() => CurrentUserId = user.Id">Delete</button></td>
                </tr>
            }
        </tbody>
    </table>

    var isPageOne = PageNumber == 1;
    var previousPageClass = isPageOne ? "page-item disabled" : "page-item";
    var isLastPage = PageNumber == TotalPages;
    var nextPageClass = isLastPage ? "page-item disabled" : "page-item";

    <nav aria-label="...">
        <ul class="pagination">
            <li class="@previousPageClass">
                <a class="page-link" @onclick="async () => await Search(PageNumber - 1)" tabindex="-1">Previous</a>
            </li>
            @if (!isPageOne)
            {
                <li class="page-item"><a class="page-link" @onclick="async () => await Search(PageNumber - 1)">@(PageNumber - 1)</a></li>
            }
            <li class="page-item active" aria-current="page">
                <a class="page-link">@PageNumber</a>
            </li>
            @if (!isLastPage)
            {
                <li class="page-item"><a class="page-link" @onclick="async () => await Search(PageNumber + 1)">@(PageNumber + 1)</a></li>
            }
            <li class="@nextPageClass">
                <a class="page-link" @onclick="async () => await Search(PageNumber + 1)">Next</a>
            </li>
        </ul>
    </nav>
}
else
{
    <div class="row">
        <p>No Users Found...</p>
    </div>
}

<!-- Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @{
                    var userDelete = SelectedUsers?.FirstOrDefault(user => user.Id == CurrentUserId);
                }
                Are you sure you want to delete @userDelete?.FirstName @userDelete?.LastName? It will remove all related teams and tournament scores associated to this user.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bs-dismiss="modal" @onclick="async () => await Delete()">Delete</button>
            </div>
        </div>
    </div>
</div>